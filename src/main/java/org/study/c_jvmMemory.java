package org.study;
/*
    栈：
        1. 栈描述的是方法执行的内存模型，每个方法被调用都会创建一个栈帧(存储局部变量、操作数、方法出口等)
        2. jvm会为每个线程创建独立栈
        3. 线程之间无法共享栈
        4. 连续空间，系统分配速度快
        5. 先进后出
    堆：
        1. 存储创建好的对象和数组(数组也是对象)
        2. jvm只有一个堆，被所有线程共享
        3. 不连续的内存空间，分配灵活、慢

             --------------------                   -------------------------
             |   栈              |                  |      堆                |
             |                   |                  |            方法区      |
             |                   |                  |           ---------    |
             |                   |                  |          | 静态变量 |   |
             |    ---------      |                  |          | 类代码   |   |
             |    |main()  |     |                  |          | 字符串   |   |
             |    |        |     |                  |           ---------    |
             |    |        |     |                  |                        |
             |    ---------      |                  |                        |
             ---------------------                  --------------------------
 */
/*
    构造器：通过new调用
    构造方法：有返回值，但是不可加返回值；返回引用类型地址。
    构造方法第一句总是super()
 */
/*
    垃圾回收机制  GarbageCollection
    1. 发现无用对象
    2. 回收空间
    垃圾回收相关算法
    1. 引用计数法
    2. 引用可达法

    分代垃圾回收机制
    年轻代    年老代    持久代（方法区）

 */






public class c_jvmMemory {

}
